{"version":3,"sources":["Components/SearchBar/SearchBar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Modal/Modal.js","Components/Container/Container.js","Components/Button/Button.js","Components/Loader/Loader.js","Services/Api.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","id","webformatURL","tags","largeImageURL","src","alt","ImageGallery","hits","onClick","map","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackDropClick","target","window","addEventListener","removeEventListener","createPortal","children","Container","Button","MyLoader","color","height","width","axios","defaults","baseURL","currentPage","searchQuery","get","then","response","data","App","isLoading","showModal","error","url","tag","toggleModal","onChangeQuery","fetchhits","Api","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","handleImageClick","nodeName","dataset","prevProps","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2b33bc15.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './SearchBar.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"SearchBar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchFormButton\">\r\n            <span className=\"SearchFormButtonLabel\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            value={this.state.query}\r\n            className=\"SearchFormInput\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import './ImageGalleryItem.css';\r\n\r\nconst ImageGalleryItem = ({ id, webformatURL, tags, largeImageURL }) => (\r\n  <li key={id} className=\"ImageGalleryItem\">\r\n    <img\r\n      src={webformatURL}\r\n      alt={tags}\r\n      data-url={largeImageURL}\r\n      className=\"ImageGalleryItemImage\"\r\n    ></img>\r\n  </li>\r\n);\r\n\r\nexport default ImageGalleryItem;\r\n","import './imageGallery.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ hits, onClick }) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"ImageGallery\" onClick={onClick}>\r\n        {hits.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n          <ImageGalleryItem\r\n            key={id}\r\n            webformatURL={webformatURL}\r\n            tags={tags}\r\n            largeImageURL={largeImageURL}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import './Modal.css';\r\nimport React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackDropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackDropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\nModal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nconst Button = ({ onClick }) => (\r\n  <button type=\"button\" onClick={onClick} className=\"Button\">\r\n    Load more\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import Loader from 'react-loader-spinner';\r\n\r\nconst MyLoader = () => (\r\n  <Loader type=\"Circles\" color=\"#3f51b5\" height={100} width={100} />\r\n);\r\n\r\nexport default MyLoader;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\nconst API_KEY = '21893173-2e6903a6fb362f8aa14208207';\r\n\r\nconst findImage = (currentPage, searchQuery) =>\r\n  axios\r\n    .get(\r\n      `?q=${searchQuery}&key=${API_KEY}&image_type=photo&orientation=horizontal&page=${currentPage}&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n\r\nexport default { findImage };\r\n","import SearchBar from './Components/SearchBar';\r\nimport React, { Component } from 'react';\r\nimport ImageGallery from './Components/ImageGallery';\r\nimport Modal from './Modal';\r\nimport Container from './Components/Container';\r\nimport Button from './Components/Button';\r\nimport MyLoader from './Components/Loader/Loader';\r\nimport Api from './Services/Api';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    hits: [],\r\n    currentPage: 1,\r\n    searchQuery: '',\r\n    isLoading: false,\r\n    showModal: false,\r\n    error: null,\r\n    url: '',\r\n    tag: '',\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchhits();\r\n    }\r\n  }\r\n\r\n  onChangeQuery = query => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      currentPage: 1,\r\n      hits: [],\r\n      error: null,\r\n    });\r\n  };\r\n\r\n  fetchhits = () => {\r\n    const { currentPage, searchQuery } = this.state;\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    return Api.findImage(currentPage, searchQuery)\r\n      .then(hits => {\r\n        this.setState(prevState => ({\r\n          hits: [...prevState.hits, ...hits],\r\n          currentPage: prevState.currentPage + 1,\r\n        }));\r\n      })\r\n      .then(() => {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  handleImageClick = ({ target }) => {\r\n    if (target.nodeName !== 'IMG') {\r\n      return;\r\n    }\r\n    const { url } = target.dataset;\r\n    const tag = target.alt;\r\n    this.setState({\r\n      url,\r\n      tag,\r\n      isLoading: false,\r\n    });\r\n    this.toggleModal();\r\n  };\r\n\r\n  render() {\r\n    const { hits, showModal, isLoading, url, tag } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <SearchBar onSubmit={this.onChangeQuery} />\r\n        <ImageGallery hits={hits} onClick={this.handleImageClick} />\r\n        {isLoading && <MyLoader />}\r\n        {hits.length > 0 && !isLoading && <Button onClick={this.fetchhits} />}\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal} onClick={this.handleImageClick}>\r\n            <img src={url} alt={tag} />\r\n          </Modal>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './styles.css';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}